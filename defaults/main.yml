---
# Extra packages to install (in addition to distro-specific default lists).
php_packages_extra: []

# Default PHP version to install on Debian-based OSes (OS-specific).
# php_default_version_debian: ""

# PHP package state; use 'present' to make sure it's installed, or 'latest' if
# you want to upgrade or switch versions using a new repo.
php_packages_state: present

# Whether to install recommended packages. Used only for Debian/Ubuntu.
php_install_recommends: true

# Set this to false if you're not using PHP with Apache/Nginx/etc.
php_enable_webserver: true

# PHP-FPM configuration.
php_enable_php_fpm: false
php_fpm_state: started
php_fpm_handler_state: restarted
php_fpm_enabled_on_boot: true
php_fpm_listen: "127.0.0.1:9000"
php_fpm_listen_allowed_clients: "127.0.0.1"
php_fpm_pm_max_children: 50
php_fpm_pm_start_servers: 5
php_fpm_pm_min_spare_servers: 5
php_fpm_pm_max_spare_servers: 5
php_fpm_pm_max_requests: 0

# PHP-FPM pool configuration.
php_fpm_pools:
  - pool_name: www
    pool_template: www.conf.j2
    pool_listen: "{{ php_fpm_listen }}"
    pool_listen_allowed_clients: "{{ php_fpm_listen_allowed_clients }}"
    pool_pm: dynamic
    pool_pm_max_children: "{{ php_fpm_pm_max_children }}"
    pool_pm_start_servers: "{{ php_fpm_pm_start_servers }}"
    pool_pm_min_spare_servers: "{{ php_fpm_pm_min_spare_servers }}"
    pool_pm_max_spare_servers: "{{ php_fpm_pm_max_spare_servers }}"
    pool_php_fpm_pm_max_requests: "{{ php_fpm_pm_max_requests }}"

# The executable to run when calling PHP from the command line.
php_executable: "php"

# OpCache settings.
php_opcache_zend_extension: "opcache.so"
php_opcache_enable: "1"
php_opcache_enable_cli: "0"
php_opcache_memory_consumption: "96"
php_opcache_interned_strings_buffer: "16"
php_opcache_max_accelerated_files: "4096"
php_opcache_max_wasted_percentage: "5"
php_opcache_validate_timestamps: "1"
php_opcache_revalidate_path: "0"
php_opcache_revalidate_freq: "2"
php_opcache_max_file_size: "0"
php_opcache_blacklist_filename: ""

# APCu settings.
php_enable_apc: true
php_apc_shm_size: "96M"
php_apc_enable_cli: "0"

# If this is set to false, none of the following options will have any effect.
# Any and all changes to /etc/php.ini will be your responsibility.
php_use_managed_ini: true

php_expose_php: "On"
php_memory_limit: "256M"
php_max_execution_time: "60"
php_max_input_time: "60"
php_max_input_vars: "1000"
php_realpath_cache_size: "32K"
php_realpath_cache_ttl: "120"

php_file_uploads: "On"
php_upload_max_filesize: "64M"
php_max_file_uploads: "20"

php_post_max_size: "32M"
php_date_timezone: "America/Chicago"
php_allow_url_fopen: "On"

php_sendmail_path: "/usr/sbin/sendmail -t -i"
php_output_buffering: "4096"
php_short_open_tag: "Off"
php_disable_functions: []
php_precision: 14
php_serialize_precision: "-1"

php_session_cookie_lifetime: 0
php_session_gc_probability: 1
php_session_gc_divisor: 1000
php_session_gc_maxlifetime: 1440
php_session_save_handler: files
php_session_save_path: ''

php_error_reporting: "E_ALL & ~E_DEPRECATED & ~E_STRICT"
php_display_errors: "Off"
php_display_startup_errors: "Off"

# Install PHP from source (instead of using a package manager) with these vars.
php_install_from_source: false
php_source_repo: "https://github.com/php/php-src.git"
php_source_version: "master"
php_source_clone_dir: "~/php-src"
php_source_clone_depth: 1
php_source_install_path: "/opt/php"
php_source_install_gmp_path: "/usr/include/x86_64-linux-gnu/gmp.h"
php_source_mysql_config: "/usr/bin/mysql_config"
# For faster compile time: "make --jobs=X" where X is # of cores present.
php_source_make_command: "make"
php_source_configure_command: >
  ./configure
  --prefix={{ php_source_install_path }}
  --with-config-file-path={{ php_conf_paths | first }}
  --enable-mbstring
  --enable-zip
  --enable-bcmath
  --enable-pcntl
  --enable-ftp
  --enable-exif
  --enable-calendar
  --enable-opcache
  --enable-pdo
  --enable-sysvmsg
  --enable-sysvsem
  --enable-sysvshm
  --enable-wddx
  --with-curl
  --with-mcrypt
  --with-iconv
  --with-gmp
  --with-pspell
  --with-gd
  --with-jpeg-dir=/usr
  --with-png-dir=/usr
  --with-zlib-dir=/usr
  --with-xpm-dir=/usr
  --with-freetype-dir=/usr
  --enable-gd-native-ttf
  --enable-gd-jis-conv
  --with-openssl
  --with-pdo-mysql=/usr
  --with-gettext=/usr
  --with-zlib=/usr
  --with-bz2=/usr
  --with-recode=/usr
  --with-mysqli={{ php_source_mysql_config }}

# cassandra driver
php_cassandra_php_driver_install: yes
php_cassandra_php_driver_cleanup_build: yes
php_cassandra_php_driver_repo: https://github.com/datastax/php-driver
php_cassandra_php_driver_version: master 
php_cassandra_php_driver_build_dependencies:
  - git
  - build-essential
  - multiarch-support
  - cmake
  - libgmp-dev
  - re2c
  - php{{ php_default_version_debian }}-dev
php_cassandra_cpp_driver_libuv_version: '1.35.0'
php_cassandra_cpp_driver_version: '2.16.0'
php_cassandra_cpp_driver_dependencies_url: https://downloads.datastax.com/cpp-driver/ubuntu/18.04/dependencies
php_cassandra_cpp_driver_url: https://downloads.datastax.com/cpp-driver/ubuntu/18.04/cassandra
php_cassandra_cpp_driver_dependencies_pkgs: #  list ordering matters for installation to success
  - url: "{{ php_cassandra_cpp_driver_dependencies_url }}/libuv/v{{ php_cassandra_cpp_driver_libuv_version }}/libuv1_{{ php_cassandra_cpp_driver_libuv_version }}-1_amd64.deb"
    dest: /tmp/libuv1_{{ php_cassandra_cpp_driver_libuv_version }}-1_amd64.deb
  - url: "{{ php_cassandra_cpp_driver_dependencies_url }}/libuv/v{{ php_cassandra_cpp_driver_libuv_version }}/libuv1-dev_{{ php_cassandra_cpp_driver_libuv_version }}-1_amd64.deb"
    dest: /tmp/libuv1-dev_{{ php_cassandra_cpp_driver_libuv_version }}-1_amd64.deb
php_cassandra_cpp_driver_pkgs: # list ordering matters for installation to success
  - url: "{{ php_cassandra_cpp_driver_url }}/v{{ php_cassandra_cpp_driver_version }}/cassandra-cpp-driver_{{ php_cassandra_cpp_driver_version }}-1_amd64.deb"
    dest: /tmp/cassandra-cpp-driver_{{ php_cassandra_cpp_driver_version }}-1_amd64.deb
  - url: "{{ php_cassandra_cpp_driver_url }}/v{{ php_cassandra_cpp_driver_version }}/cassandra-cpp-driver-dev_{{ php_cassandra_cpp_driver_version }}-1_amd64.deb"
    dest: /tmp/cassandra-cpp-driver-dev_{{ php_cassandra_cpp_driver_version }}-1_amd64.deb
  - url: "{{ php_cassandra_cpp_driver_url }}/v{{ php_cassandra_cpp_driver_version }}/cassandra-cpp-driver-dbg_{{ php_cassandra_cpp_driver_version }}-1_amd64.deb"
    dest: /tmp/cassandra-cpp-driver-dbg_{{ php_cassandra_cpp_driver_version }}-1_amd64.deb

# pdo_dblib driver
php_pdo_dblib_driver_install: no
php_pdo_dblib_driver_dependencies: 
  - freetds-common
  - freetds-bin
  - freetds-dev
php_pdo_dblib_driver_ini_template: freetds.ini.j2

# pecl extensions
php_pecl_extensions_dependencies: 
  - php-pear
  - cmake
php_pecl_extensions_install: []
php_pecl_extensions_install_opts: --force --alldeps
php_extensions_enable: []
php_extensions_disable: []

# xdebug configuration
php_xdebug_show_error_trace: 1
php_xdebug_idekey: PHPSTORM
php_xdebug_remote_host: 10.0.2.2
php_xdebug_remote_port: 9009
php_xdebug_max_nesting_level: 512
# php_xdebug_log_path: '' # path to xdebug logs. Ex: /vagrant/xdebug.log
