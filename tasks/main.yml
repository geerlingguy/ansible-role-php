---
- name: Include OS-specific variables.
  include_vars: "{{ ansible_os_family }}.yml"

- name: Ensure PHP packages are installed (RedHat).
  yum: >
    name={{ item }}
    state=installed
    enablerepo={{ php_enablerepo }}
  with_items: php_packages
  notify: restart webserver
  when: ansible_os_family == 'RedHat'

- name: Ensure PHP packages are installed (Debian).
  apt: >
    name={{ item }}
    state=installed
  with_items: php_packages
  notify: restart webserver
  when: ansible_os_family == 'Debian'

- include: setup-config-php.yml

- name: find version PHP
  shell: php --version | sed -n 1p | cut -d'-' -f1 | cut -c 5-7
  register: php_version_installed

- name: Version PHP > 5.5 install packages OpCache
  command: pecl -d preferred_state=beta install ZendOpcache
  when: php_version_installed != '5.5'
  ignore_errors: true

- name: Check if path exists
  stat: path={{ php_extension_conf_path }}/
  register: check_path

- name: Set path if not exists
  command: echo '/etc/php5/conf.d'
  register: php_extension_conf_path
  when: check_path.stat.exists == False

- name: Place OpCache configuration files in place.
  template: >
    src={{ item.src }}
    dest={{ item.dest }}
    owner=root group=root mode=644
  with_items:
  - { src: opcache.ini.j2, dest: "{{ php_extension_conf_path }}/{{ php_opcode_conf_filename }}" }
  notify: restart webserver

- name: Enable OpCache
  command: php5enmod -s ALL opcache
  when: ansible_os_family == 'Debian' and php_version_installed != '5.5'
  notify: restart webserver

- name: Ensure php-fpm is started and enabled at boot (if configured).
  service: name=php-fpm state=started enabled=yes
  when: php_enable_php_fpm
