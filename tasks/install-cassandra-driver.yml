---
- name: Cassandra | Make package multiarch-support available on this OS
  block: 
    - name: Cassandra | Add bionic apt key
      apt_key:
        keyserver: keyserver.ubuntu.com
        id: 3B4FE6ACC0B21F32
        state: present

    - name: Cassandra | Add bionic repository for multiarch-support
      apt_repository:
        repo: deb http://security.ubuntu.com/ubuntu bionic-security main
        filename: bionic
        state: present
        update_cache: yes
  tags: ['cassandra-apt-requirements']
  when: ansible_distribution_release != 'bionic'

- name: Cassandra | install build dependencies
  apt:
    name: "{{ php_cassandra_php_driver_build_dependencies }}"
    state: present

- name: Cassandra | ensure cassandra c++ driver is not installed
  find:
    paths: /usr/lib/x86_64-linux-gnu/
    recurse: true
    patterns: '*cassandra*'
  register: cassandra_cpp_result

- name: Cassandra | install cassandra c++ driver and dependencies
  include_tasks: _download_install.yml
  loop: "{{ php_cassandra_cpp_driver_dependencies_pkgs + php_cassandra_cpp_driver_pkgs }}"
  when: cassandra_cpp_result.matched < 1

- name: Cassandra | check for cassandra php driver
  shell:
    cmd: /usr/bin/php{{ php_default_version_debian }} -m | grep 'cassandra'
  failed_when: false
  changed_when: false
  register: php_cassandra_check_install

- name: Cassandra | download and compile cassandra php driver if it is not found
  block:
    - name: Cassandra | Set working directory
      set_fact: 
        workdir: /usr/src/php-driver

    - name: Cassandra | download datastax/php-driver from GitHub
      git: 
        repo: "{{ php_cassandra_php_driver_repo }}"
        version: "{{ php_cassandra_php_driver_version }}"
        dest: "{{ workdir }}"

    - name: Cassandra | compile source code
      shell:
        cmd: |
          set -ex
          /usr/bin/phpize{{ php_default_version_debian }}
          mkdir -p {{ workdir }}/build
          cd {{ workdir }}/build
          ../ext/configure --with-php-config=/usr/bin/php-config{{ php_default_version_debian }} > /dev/null
          make clean >/dev/null
          make -j{{ ansible_processor_cores }}
          make install
          echo 'extension=cassandra.so' > /etc/php/{{ php_default_version_debian }}/mods-available/cassandra.ini
          phpenmod -v {{ php_default_version_debian }} cassandra
        chdir: "{{ workdir }}/ext"
        executable: /bin/bash
      register: build_cassandra
      changed_when: build_cassandra.rc != 0

    - name: Cassandra | cleanup
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ workdir }}"
      when: php_cassandra_php_driver_cleanup_build | bool
      
  when: php_cassandra_check_install.rc == 1
  tags: ['molecule-idempotence-notest']
